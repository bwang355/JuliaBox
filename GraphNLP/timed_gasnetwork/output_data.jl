using Plots
using DelimitedFiles
using Statistics

# get times returns the average time per iteration
function get_times(t, it)
    dim = length(t[:,1])

    return_array = zeros(dim)
   
    for i in 1:dim
        return_array[i] = (t[i,1]/it[i,1] + t[i,2]/it[i,2] + t[i,3]/it[i,3])/3
    end

    return return_array   
end


# r = number of scenarios
# vars = number of variables
r = [1,5,10,25,75,100,150]
vars = r .*11376 .+ 264

# Data is taken from the output_files 
# t{solver}   = total solver time
# tls{solver} = linear solver time
# it{solver}  = number of iterations 

tMa57s    = [2.248 2.244 2.219; 116.989 117.003 116.579; 293.347 289.655 294.719; 395.049 371.824 380.632; 1398.092 1406.327 1411.055; 1812.262 1839.588 1836.482; 3837.548 3858.657 3855.382]
tlsMa57s  = [1.861 1.879 1.848; 109.935 109.950 109.958; 271.024 270.615 268.345; 299.849 287.045 287.125; 973.670 973.120 972.859; 1231.309 1234.468 1232.752; 2429.122 2425.019 2423.208]
itMa57s    = [45 45 45; 93 93 93; 97 97 97; 129 129 129; 150 150 150; 145 145 145; 183 183 183]

tMa57p  = [2.454 2.481 2.332 ; 122.478 121.573 121.109; 300.933 301.945 302.350; 304.611 324.451 317.272; 1174.724 1169.986 1163.461; 1483.135 1472.369 1467.479; 3125.535 3087.692 3064.376]
tlsMa57p = [1.988 1.897 1.870 ; 118.808 118.989 118.399; 290.200 290.864 290.677; 292.136 303.061 304.129; 973.547 982.944 979.530; 1252.270 1242.299 1240.820; 2418.293 2415.859 2405.999]
itMa57p  = [45 45 45; 93 93 93; 97 97 97; 130 131 130; 150 150 150; 145 145 145; 183 183 183]

tSchur30   = [23.980 21.264 21.601; 61.313 59.927 60.833; 91.292 88.606 88.846; 209.112 210.311 213.726; 904.538 902.900 922.756; 1159.338 1220.219 1173.226; 2244.799 2659.485 2404.037]
tlsSchur30  = [23.310 20.707 20.873; 58.764 57.307 58.421; 82.624 78.948 79.126; 188.461 191.164 192.720; 722.411 721.353 740.282; 975.073 1042.438 992.485; 1821.127 1943.677 1982.018]
itSchur30   = [44 44 44; 94 94 94; 100 100 100; 120 120 120; 139 139 139; 134 134 134; 178 178 178]

tPardiso  = [4.540 4.378 4.531; 10.111 12.014 10.050; 27.898 26.580 26.488; 93.870 80.560 95.651; 982.360 1029.743 889.582; 1009.431 1857.810 2423.956; 5701.668 6814.228 7022.864]
tlsPardiso  = [3.678 3.685 3.680; 7.174 7.519 7.194; 16.344 16.355 16.736; 61.808 59.068 63.343; 763.046 809.126 666.903; 743.971 1622.406 2147.947; 5204.049 6332.147 6513.347 ]
itPardiso  = [46 47 47; 94 94 94; 98 98 99; 123 123 123; 145 145 145; 144 145 144; 178 177 177]

tjump    = [2.294 2.271 2.436; 129.933 131.256 130.607; 309.6659 310.347 310.043; 353.226 353.555 354.203; 1386.450 1389.328 1388.793; 1803.424 1799.338 1800.230; 3917.572 3912.523 3860.475]
tlsjump  = [1.869 1.877 1.848; 113.034 113.803 113.118; 279.581 279.416 279.414; 269.545 269.806 270.296; 994.062 997.070 995.667; 1270.579 1267.927 1265.582; 2610.156 2605.994 2555.933]
itjump   = [45 45 45; 95 95 95; 100 100 100; 123 123 123; 146 146 146; 145 145 145; 185 185 185]


Ma57s   = get_times(tMa57s, itMa57s)
Ma57sls = get_times(tlsMa57s, itMa57s)

Ma57p   = get_times(tMa57p, itMa57p)
Ma57pls  = get_times(tlsMa57p, itMa57p) 

Schur  = get_times(tSchur30, itSchur30)
Schurls = get_times(tlsSchur30, itSchur30)

Pardiso   = get_times(tPardiso, itPardiso)
Pardisols = get_times(tlsPardiso, itPardiso)

jump   = get_times(tjump, itjump)
jumpls = get_times(tlsjump, itjump)
